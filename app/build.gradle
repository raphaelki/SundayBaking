apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.rapha.sundaybaking"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    productFlavors {
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

ext{
    supportLibraryVersion = "27.1.1"
    constraintLayoutVersion = "1.1.0"
    architectureComponentsVersion = "1.1.1"
    roomVersion = "1.1.0"
    leakCanaryVersion = "1.5.4"
    daggerVersion = "2.15"
    glideVersion = "4.7.1"
    retrofitVersion = "2.4.0"
    exoplayerVersion = "2.7.3"
    timberVersion = "4.7.0"
    jUnitVersion = "4.12"
    testRunnerVersion = "1.0.2"
    testRulesVersion = "1.0.2"
    espressoVersion = "3.0.2"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"

    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    implementation "android.arch.lifecycle:extensions:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:viewmodel:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:livedata:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:common-java8:$architectureComponentsVersion"
    testImplementation "android.arch.core:core-testing:$architectureComponentsVersion"

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"
    testImplementation "android.arch.persistence.room:testing:$roomVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

//    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
//    implementation "com.google.dagger:dagger-android:$daggerVersion"
//    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
//    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    testImplementation "junit:junit:$jUnitVersion"

    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test:rules:$testRulesVersion"

    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
}
